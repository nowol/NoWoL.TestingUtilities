trigger:
- main

pool:
  vmImage: windows-2022

variables:
- group: "NugetAuth"
- name: buildConfiguration
  value: 'Release'

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: 
    steps:
      - task: UseDotNet@2
        inputs:
          packageType: 'sdk'
          version: '6.x'

      - task: gitversion/setup@0
        displayName: Install GitVersion
        inputs:
          versionSpec: '5.x'

      - task: gitversion/execute@0
        inputs:
          additionalArguments: '/updateprojectfiles'

      # build 
      - script: dotnet build --configuration $(buildConfiguration)
        displayName: 'dotnet build $(buildConfiguration)'

      - task: CopyFiles@2
        inputs:
          sourceFolder: '$(Build.SourcesDirectory)'
          contents: '**/$(buildConfiguration)/**/?(*.nupkg|*.snupkg)'
          targetFolder: '$(Build.ArtifactStagingDirectory)/artifacts'
          flattenFolders: true

      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: '$(Build.ArtifactStagingDirectory)/artifacts'
          artifactName: Nuget

- stage: Publishing
  dependsOn: Build
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  displayName: 'Nuget - Publish Public Packages'
  jobs:
  - job: 
    steps:
      - task: DownloadBuildArtifacts@1
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'Nuget'
          downloadPath: '$(System.ArtifactsDirectory)/artifacts/'

      - task: DotNetCoreCLI@2
        displayName: Publish nuget packages
        enabled: true
        inputs:
          workingDirectory: '$(System.ArtifactsDirectory)'
          command: custom
          custom: nuget
          arguments: >
            push artifacts\Nuget\*.nupkg
            -s $(NugetUrl)
            -k $(NugetApiKey)